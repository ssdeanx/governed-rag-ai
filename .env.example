# OpenAI API Configuration
# Can also use gemini must set OPENAI_BASE_URL and OPENAI_MODEL, OPENAI_EMBEDDING_BASE_URL, and EMBEDDING_MODEL
OPENAI_API_KEY=your_openai_api_key_here
OPENAI_BASE_URL=https://api.openai.com/v1
OPENAI_MODEL=gpt-4o-mini

# Google Generative AI Configuration (Gemini)
GOOGLE_GENERATIVE_AI_API_KEY='your_google_generative_ai_api_key_here'
GOOGLE_MODEL='gemini-2.5-flash'

# OpenRouter Configuration
OPENROUTER_API_KEY='your_openrouter_api_key_here'

# Optional: Mastra Telemetry (set to true to disable warnings)
# MASTRA_TELEMETRY_DISABLED=true

# OpenAI (or swap in your own embedder)
EMBEDDING_MODEL='text-embedding-3-small'
#OPENAI_EMBEDDING_BASE_URL

# Qdrant
QDRANT_URL='http://localhost:6333'
QDRANT_COLLECTION='governed_rag'
#QDRANT_API_KEY=your_qdrant_api_key_here

# Demo auth (HS256)
JWT_SECRET='dev-secret'
TENANT='acme'

# Database Configuration (Storage)
# For local development, use file-based database
DATABASE_URL='file: deep-research.db'
# For remote LibSQL (Turso), use the connection URL and auth token
# DATABASE_URL="libsql://your-database.turso.io"
# DATABASE_AUTH_TOKEN="your-auth-token"
# Vector Database Configuration (separate from storage if needed)
VECTOR_DATABASE_URL="file:./vector-store.db"
# VECTOR_DATABASE_AUTH_TOKEN=""

# Langfuse Configuration (optional, for monitoring and logging)
# Get your keys from https://langfuse.com
LANGFUSE_PUBLIC_KEY="your_langfuse_public_key_here"
LANGFUSE_SECRET_KEY="your_langfuse_secret_key_here"
LANGFUSE_BASE_URL="https://us.cloud.langfuse.com"
SERVICE_NAME="mastra"
NODE_ENV="development"

# Supabase Configuration (optional, for additional storage or auth)
#SUPABASE="postgresql://postgres.*****:*****@aws-0-us-east-1.pooler.supabase.com:5432/postgres"
#SUPABASE_URL="https://*********.supabase.co"

# GitHub API Key (for GitHub integrations)
#GITHUB_API_KEY="your_github_api_key_here"

MASTRA_BASE_URL="https://localhost:4111"

# Optional
JWT_TOKEN="your_jwt_token_here"


# auth user for client login
USER_EMAIL='user@example.com'
USER_PASSWORD='securepassword'

# Supabase Configuration (for client-side authentication)
#SUPABASE_URL="https://*********.supabase.co
#SUPABASE_ANON_KEY="your_supabase_anon_key_here"
