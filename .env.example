# OpenAI API Configuration
# Can also use gemini must set OPENAI_BASE_URL and OPENAI_MODEL, OPENAI_EMBEDDING_BASE_URL, and EMBEDDING_MODEL
OPENAI_API_KEY=your_openai_api_key_here
OPENAI_BASE_URL=https://api.openai.com/v1
OPENAI_MODEL=gpt-4o-mini

# Google Generative AI Configuration (Gemini)
GOOGLE_GENERATIVE_AI_API_KEY='your_google_generative_ai_api_key_here'
GOOGLE_MODEL='gemini-2.5-flash'

# Gemini OAuth Cache Directory
GEMINI_OAUTH_CACHE='~/.gemini/oauth_creds.json'


# OpenRouter Configuration
OPENROUTER_API_KEY='your_openrouter_api_key_here'

# Optional: Mastra Telemetry (set to true to disable warnings)
# MASTRA_TELEMETRY_DISABLED=true

# OpenAI (or swap in your own embedder)
EMBEDDING_MODEL='text-embedding-3-small'
#OPENAI_EMBEDDING_BASE_URL

# Qdrant
QDRANT_URL='http://localhost:6333'
QDRANT_COLLECTION='governed_rag'
#QDRANT_API_KEY=your_qdrant_api_key_here

# Demo JWT Secret (for RBAC demonstration only, NOT for user authentication)
# This is used by backend tools for access control testing
JWT_SECRET='dev-secret'
TENANT='acme'

# Database Configuration (Storage)
# For local development, use file-based database
DATABASE_URL='file: deep-research.db'
# For remote LibSQL (Turso), use the connection URL and auth token
# DATABASE_URL="libsql://your-database.turso.io"
# DATABASE_AUTH_TOKEN="your-auth-token"
# Vector Database Configuration (separate from storage if needed)
VECTOR_DATABASE_URL="file:./vector-store.db"
# VECTOR_DATABASE_AUTH_TOKEN=""

# Langfuse Configuration (optional, for monitoring and logging)
# Get your keys from https://langfuse.com
LANGFUSE_PUBLIC_KEY="your_langfuse_public_key_here"
LANGFUSE_SECRET_KEY="your_langfuse_secret_key_here"
LANGFUSE_BASE_URL="https://us.cloud.langfuse.com"
SERVICE_NAME="mastra"
NODE_ENV="development"

# Cedar-OS Configuration (for frontend connection to Mastra backend)
# Mastra backend URL - Cedar will connect directly to this
NEXT_PUBLIC_MASTRA_URL="http://localhost:4111"


# Supabase Configuration (REQUIRED for user authentication)
# Get these from your Supabase project settings at https://supabase.com/dashboard
SUPABASE_URL="https://your-project.supabase.co"
SUPABASE_ANON_KEY="your_supabase_anon_key_here"

# For client-side Supabase (use same values as above)
NEXT_PUBLIC_SUPABASE_URL="https://your-project.supabase.co"
NEXT_PUBLIC_SUPABASE_ANON_KEY="your_supabase_anon_key_here"

# Supabase Database Connection (for PostgreSQL/PgVector storage)
# This is the direct database URL, different from SUPABASE_URL above
# Get from Supabase Dashboard > Project Settings > Database > Connection String (Session Pooler)
SUPABASE="postgresql://postgres.xxxxx:password@aws-0-us-east-1.pooler.supabase.com:5432/postgres"

# GitHub OAuth Configuration (for Supabase OAuth)
# Configure these in your Supabase dashboard: Authentication > Providers > GitHub
# Callback URL should be: https://your-project.supabase.co/auth/v1/callback
GITHUB_CLIENT_ID="your_github_client_id_here"
GITHUB_CLIENT_SECRET="your_github_client_secret_here"

# GitHub API Key (optional, for GitHub integrations beyond OAuth)
GITHUB_API_KEY=""

# Server-side Supabase Auth (for backend services)
# These credentials are used by the Mastra backend to authenticate with Supabase
# Create a user in Supabase and use those credentials here
USER_EMAIL='user@example.com'
USER_PASSWORD='your_super_secret_password_here'

# Application URL (for OAuth redirects)
NEXT_PUBLIC_APP_URL='http://localhost:3000'


